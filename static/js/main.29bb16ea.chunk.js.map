{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","to","pathname","className","src","alt","map","genre","index","key","slice","Home","movies","state","movie","medium_cover_image","About","Detail","history","location","useEffect","undefined","push","App","useState","movieList","setMovieList","isLoading","setIsLoading","a","async","axios","get","data","getMovieList","length","path","exact","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.29bb16ea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Movie.css\";\r\n\r\nconst Movie = ({ id, year, title, summary, poster, genres }) => {\r\n  return (\r\n    <Link\r\n      to={{\r\n        pathname:`/movie-app-2019/movie/${id}`,\r\n        id,\r\n        year,\r\n        title,\r\n        summary,\r\n        poster,\r\n        genres,\r\n      }}\r\n      className=\"movie__link\"\r\n    >\r\n      <div className=\"movie__contain\">\r\n        <div className=\"movie__left\">\r\n          <img\r\n            className=\"movie__left-poster\"\r\n            src={poster}\r\n            alt={title}\r\n            title={title}\r\n          />\r\n        </div>\r\n        <div className=\"movie__right\">\r\n          <h2 className=\"movie__right-title\">{title} <span className=\"movie__right-year\">{year}</span></h2>\r\n          <ul className=\"movie__right-genre\">{genres.map((genre,index)=><li key={index}>{genre}</li>)}</ul>\r\n          <p className=\"movie__right-summary\">{summary.slice(0.150)}...</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nMovie.propTypes = {\r\n  // id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport Movie from \"../components/Movie\";\r\n\r\nconst Home = ({ state: movies }) => {\r\n  return (\r\n    <section>\r\n      {movies.map(movie => (\r\n        <Movie\r\n          key={movie.id}\r\n          id={movie.id}\r\n          year={movie.year}\r\n          title={movie.title}\r\n          summary={movie.summary}\r\n          poster={movie.medium_cover_image}\r\n          genres={movie.genres}\r\n        />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"about__contain\">\r\n      <h2>노마드코더 리액트 크롬앱 만들기 - Movie App -</h2>\r\n\r\n      <h3>- 강의 내용 -</h3>\r\n      <ul>\r\n        <li>movie list를 axios를 이용해서 비동기로 받아오기</li>\r\n        <li>데이터 받기까지 로딩중 글씨 보이다가 list 화면에 뿌려주기</li>\r\n        <li>라우팅으로 화면전환 해주기</li>\r\n        <li>movie list를 누르고 들어가지 않으면 home으로 리다이렉팅</li>\r\n      </ul>\r\n\r\n      <h3>- 수정한 내용 -</h3>\r\n      <ul>\r\n        <li>강의에서 나오는 클래스형 컴포넌트를 함수형으로 변경</li>\r\n        <li>App 컴포넌트에서 데이터 관리해서 Route에 넘겨주기</li>\r\n        <li>강의와 다른 스타일 적용</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Detail.css\";\r\n\r\nconst Detail = ({ history, location }) => {\r\n  const { year, title, summary, poster, genres } = location;\r\n  useEffect(() => {\r\n    if (location.title === undefined) history.push(\"/movie-app-2019/\");\r\n  }, [location, history]);\r\n  return (\r\n    <div className=\"detail__backgound\">\r\n      <div className=\"detail__img\">\r\n        <img src={poster} alt={title} title={title} />\r\n      </div>\r\n      <h2 className=\"detail__title\">{title}</h2>\r\n      <h3 className=\"datail__year\">{year}</h3>\r\n      <ul className=\"detail__genre\">\r\n        {genres.map((genre, index) => (\r\n          <li key={index}>{genre}</li>\r\n        ))}\r\n      </ul>\r\n      <p className=\"detail__summary\">{summary}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport { Link, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movieList, setMovieList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const getMovieList = async () => {\n      const {\n        data: {\n          data: { movies }\n        }\n      } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n      setMovieList(movies);\n    };\n    getMovieList();\n  }, []);\n\n  useEffect(() => {\n    movieList.length !== 0 && setIsLoading(false);\n  }, [movieList]);\n\n  return (\n    <>\n      <ul className=\"nav\">\n        <li>\n          <Link to=\"/movie-app-2019/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/movie-app-2019/about\">About</Link>\n        </li>\n      </ul>\n      <Route\n        path=\"/movie-app-2019/\"\n        exact\n        render={() =>\n          isLoading ? (\n            <p className=\"loading\">Now loading...</p>\n          ) : (\n            <Home state={movieList} />\n          )\n        }\n      />\n      <Route path=\"/movie-app-2019/about\" component={About} />\n      <Route path=\"/movie-app-2019/movie/:id\" component={Detail} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}